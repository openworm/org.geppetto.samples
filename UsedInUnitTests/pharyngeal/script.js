var widthScreen=this.innerWidth,heightScreen=this.innerHeight,marginLeft=100,marginTop=70,marginRight=10,marginBottom=50,defaultWidgetWidth=450,defaultWidgetHeight=500,initialiseTreeWidget=function(e,t,n,o,i){o=void 0!==o?o:defaultWidgetWidth,i=void 0!==i?i:defaultWidgetHeight;var a=G.addWidget(3);return a.setSize(i,o),a.setName(e),a.setPosition(t,n),a},initialiseControlPanel=function(){var e={"OSB Control Panel":{"Network Info":{Connectivity:{actions:["if (GEPPETTO.ModelFactory.geppettoModel.neuroml.network){showConnectivityMatrix(c302_A_Pharyngeal)}"],icon:"gpt-make-group",label:"Connectivity",tooltip:"Loads the connectivity matrix widget"},"Model Description":{actions:["showModelDescription(getMainType())"],icon:"gpt-pyramidal-cell",label:"Model Description",tooltip:"Information on the model"},Inputs:{actions:["showInputTreeView(getMainType())"],icon:"gpt-inputs",label:"Inputs",tooltip:"Inputs present on the network"}},"Cell Info":{Cell:{actions:["executeOnSelection(showSelection)"],icon:"gpt-pyramidal-cell",label:"Cell Info",tooltip:"Information on the selected cell"},Channels:{actions:["executeOnSelection(showChannelTreeView)"],icon:"gpt-ion-channel",label:"Channels",tooltip:"Ion channels present on the selected cell"},CellVisual:{actions:["executeOnSelection(showVisualTreeView)"],icon:"gpt-pyramidal-cell",label:"Cell Visual",tooltip:"Visual information on selected cell"}}}};GEPPETTO.ComponentFactory.addWidget("BUTTONBAR",{configuration:e["OSB Control Panel"]["Network Info"],isStateless:!0},function(){ButtonBar1=this,this.setPosition(90,5),this.showTitleBar(!1),this.setTransparentBackground(!0),this.setResizable(!1),this.setMinSize(0,0),this.setAutoWidth(),this.setAutoHeight()})},mainPopup=void 0,showModelDescription=function(e){void 0==mainPopup&&(mainPopup=G.addWidget(1).setName("Model Description - "+e.getName()).addCustomNodeHandler(customHandler,"click").setPosition(95,140)),mainPopup.setData(e,[GEPPETTO.Resources.HTML_TYPE])},getMainType=function(){return"undefined"==typeof c302_A_Pharyngeal?GEPPETTO.ModelFactory.geppettoModel.neuroml.c302_A_Pharyngeal:c302_A_Pharyngeal.getType()},addSuggestionsToSpotlight=function(){var e={label:"Record all membrane potentials",actions:["var instances=Instances.getInstance(GEPPETTO.ModelFactory.getAllPotentialInstancesEndingWith('.v'));","GEPPETTO.ExperimentsController.watchVariables(instances,true);"],icon:"fa-dot-circle-o"},t={label:"Record all membrane potentials at soma",actions:["var instances=Instances.getInstance(GEPPETTO.ModelFactory.getAllPotentialInstancesEndingWith('_0.v'));","GEPPETTO.ExperimentsController.watchVariables(instances,true);"],icon:"fa-dot-circle-o"},n={label:"Link morphology colour to recorded membrane potentials",actions:["G.addBrightnessFunctionBulkSimplified(GEPPETTO.ModelFactory.instances.getInstance(GEPPETTO.ModelFactory.getAllPotentialInstancesEndingWith('.v'),false), function(x){return (x+0.07)/0.1;});"],icon:"fa-lightbulb-o"};GEPPETTO.Spotlight.addSuggestion(t,GEPPETTO.Resources.RUN_FLOW),GEPPETTO.Spotlight.addSuggestion(e,GEPPETTO.Resources.RUN_FLOW),GEPPETTO.Spotlight.addSuggestion(n,GEPPETTO.Resources.PLAY_FLOW)},executeOnSelection=function(e){if(GEPPETTO.ModelFactory.geppettoModel.neuroml.cell){var t=G.getSelection()[0];void 0!==t?e(t):G.addWidget(1).setMessage("No cell selected! Please select one of the cells and click here for information on its properties.").setName("Warning Message")}},showConnectivityMatrix=function(e){loadConnections(),void 0==GEPPETTO.ModelFactory.geppettoModel.neuroml.projection?G.addWidget(1).setMessage("No connection found in this network").setName("Warning Message"):G.addWidget(6).setData(e,{linkType:function(e){if(void 0!=GEPPETTO.ModelFactory.geppettoModel.neuroml.synapse){var t=GEPPETTO.ModelFactory.getAllVariablesOfType(e.getParent(),GEPPETTO.ModelFactory.geppettoModel.neuroml.synapse)[0];if(void 0!=t)return t.getId()}return e.getName().split("-")[0]}}).setName("Connectivity Widget on network "+e.getId()).configViaGUI()},showChannelTreeView=function(e){if(GEPPETTO.ModelFactory.geppettoModel.neuroml.ionChannel){var t=initialiseTreeWidget("Ion Channels on cell "+e.getName(),widthScreen-marginLeft-defaultWidgetWidth,marginTop),n=GEPPETTO.ModelFactory.getAllTypesOfType(GEPPETTO.ModelFactory.geppettoModel.neuroml.ionChannel),o=[];for(ionChannelIndex in n){var i=n[ionChannelIndex];"ionChannel"!=i.getId()&&o.push(i)}t.setData(o)}},showInputTreeView=function(e){if(GEPPETTO.ModelFactory.geppettoModel.neuroml.pulseGenerator){var t=initialiseTreeWidget("Inputs on "+e.getId(),widthScreen-marginLeft-defaultWidgetWidth,marginTop),n=GEPPETTO.ModelFactory.getAllTypesOfType(GEPPETTO.ModelFactory.geppettoModel.neuroml.pulseGenerator),o=[];for(pulseGeneratorIndex in n){var i=n[pulseGeneratorIndex];"pulseGenerator"!=i.getId()&&o.push(i)}t.setData(o)}},showVisualTreeView=function(e){initialiseTreeWidget("Visual information on cell "+e.getName(),widthScreen-marginLeft-350,heightScreen-marginBottom-400,350,400).setData(e.getType().getVisualType(),{expandNodes:!0})},customHandler=function(node,path,widget){var n;try{n=eval(path)}catch(e){node=void 0}var metaType=n.getMetaType();if(metaType==GEPPETTO.Resources.VARIABLE_NODE)G.addWidget(Widgets.PLOT).plotFunctionNode(n);else if(metaType==GEPPETTO.Resources.VISUAL_GROUP_NODE)n.show(!0);else if(metaType==GEPPETTO.Resources.COMPOSITE_TYPE_NODE){var target=widget;GEPPETTO.isKeyPressed("meta")&&(target=G.addWidget(1).addCustomNodeHandler(customHandler,"click")),target.setName("Information for "+n.getId()).setData(n,[GEPPETTO.Resources.HTML_TYPE])}},showSelection=function(e){void 0==mainPopup&&(mainPopup=G.addWidget(1).addCustomNodeHandler(customHandler,"click").setPosition(95,140)),mainPopup.setName("Cell Information for "+e.getType().getId()).setData(e.getType(),[GEPPETTO.Resources.HTML_TYPE])};initialiseControlPanel(),addSuggestionsToSpotlight();var mdPopupWidth=350,mdPopupHeight=400,elementMargin=20,realHeightScreen=heightScreen-marginTop-marginBottom,realWidthScreen=widthScreen-marginRight-marginLeft-defaultWidgetWidth-elementMargin;showModelDescription("undefined"==typeof c302_A_Pharyngeal?GEPPETTO.ModelFactory.geppettoModel.neuroml.c302_A_Pharyngeal:c302_A_Pharyngeal.getType()),G.setCameraPosition(-60,-250,370);